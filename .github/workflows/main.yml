name: linting, testing, building
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
permissions:
  contents: write
  pages: write
  id-token: write
concurrency:
  group: "pages"
  cancel-in-progress: true
jobs:
  build-and-ui-testing:
    runs-on: ubuntu-latest
    concurrency: ci-${{ github.ref }}
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v4
      - name: Staring Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: install modules
        run: npm ci --force
      - name: build production project
        run: npm run build:prod
        if: always()
      - name: unit testing
        if: always()
        run: npm run test:unit
      - name: Verify files
        run: |
          ls -la reports/
          [ -f reports/index.html ] || (echo "index.html not found" && exit 1)
      - name: Setup Pages
        uses: actions/configure-pages@v5
        if: always()
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        if: always()
        with:
          name: github-pages
          path: "reports/"
      - name: Deploy to GitHub Pages
        id: deployment
        if: always()
        uses: actions/deploy-pages@v4

  checks:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - uses: actions/checkout@v4
      - name: Staring Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: install modules
        run: npm ci --force
      - name: linting typescript
        run: npm run lint:ts
        if: always()
      - name: linting css
        run: npm run lint:scss
